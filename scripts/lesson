#!/usr/bin/env python

'''Lesson management script.'''


import sys
import os
import glob
import shutil
import webbrowser


# lesson directory within installation directory
LESSON_DIR = 'lessons'

# things to copy over for learners to work with
RAW_MATERIALS = 'code data'.split()


def main(argv):
    '''Main command driver.'''
    try:
        assert len(argv) > 1, \
            'Must have command name.'
        cmd, args = argv[1], argv[2:]
        assert cmd in COMMANDS, \
            'Unknown command: "{0}"'.format(cmd)
        COMMANDS[cmd](*args)
    except Exception, e:
        print >> sys.stderr, e
        print >> sys.stderr, USAGE
        sys.exit(1)


def _help():
    '''help: display help.'''
    print USAGE


def files(*args):
    '''files <lesson_name> [<install_directory>]: make local copy of files for lesson.'''

    # Where is the lesson directory?
    lesson_dir = _find_lesson_dir('files', args)

    # Where are we installing files?
    install_root = os.curdir
    if len(args) > 1:
        install_root = args[1]
    assert os.path.isdir(install_root), \
        'No such installation directory "{0}"'.format(install_root)

    # Is everything a file or directory?
    raw = [os.path.join(lesson_dir, r) for r in RAW_MATERIALS]
    for path in raw:
        assert os.path.isfile(path) or os.path.isdir(path), \
            'Unrecognized source object "{0}"'.format(path)

    # Install.
    for (name, path) in zip(RAW_MATERIALS, raw):
        if os.path.isfile(path):
            shutil.copy(path, install_root)
        elif os.path.isdir(path):
            shutil.copytree(path, os.path.join(install_root, name))


def view(*args):
    '''view <lesson>: open lesson in browser.'''

    # Where is the lesson directory?
    lesson_dir = _find_lesson_dir('view', args)

    index_page = os.path.join(lesson_dir, 'index.html')
    assert os.path.isfile(index_page), \
        'No index.html page for lesson "{0}" at "{1}"'.format(lesson_name, index_page)
    webbrowser.open('file://' + index_page)


def _find_lesson_dir(command, args):
    '''Turn lesson name into lesson root directory.'''
    assert len(args) >= 1, \
        'Command "{0}" requires lesson name'.format(command)
    lesson_name = args[0]
    root = os.path.abspath(os.path.join(os.path.dirname(__file__), os.pardir))
    lesson_dir = os.path.join(root, LESSON_DIR, lesson_name)
    assert os.path.isdir(lesson_dir), \
        'No such lesson "{0}" at "{1}"'.format(lesson_name, lesson_dir)
    return lesson_dir


COMMANDS = {
    'help'  : _help,
    'view'  : view,
    'files' : files
}


USAGE = '''Usage: lesson command [args]
{0}
See https://github.com/gvwilson/lesson-installer-demo for more documentation.'''\
.format('\n'.join('  {:8}: {}'.format(c, COMMANDS[c].__doc__) for c in COMMANDS))


if __name__ == '__main__':
    main(sys.argv)
